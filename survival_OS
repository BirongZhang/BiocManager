brca_subtypes <- TCGAbiolinks::TCGAquery_subtype("brca")
colnames(brca_subtypes)

# https://www.omicsclass.com/article/1125
# http://bioconductor.org/packages/release/bioc/vignettes/TCGAbiolinks/inst/doc/clinical.html
# https://github.com/mforde84/RNAseq-Survival-Analysis-TCGA-KIRC
# http://gdac.broadinstitute.org
library(survival)
library(DESeq2)
library(limma)

setwd("/Users/birongzhang/Downloads/survival")
BRCA.mRNA <- read.table("RNA/BRCA.rnaseqv2__illuminahiseq_rnaseqv2__unc_edu__Level_3__RSEM_genes_normalized__data.data.txt", header=T, row.names=1, sep="\t")[-1,]
rna<-BRCA.mRNA  # 20531 1212

clinical <- read.table("Clinical/BRCA.merged_only_clinical_clin_format.csv", sep=",", fill= TRUE)
clinical <- t(clinical)
clinical <-data.frame(clinical)
colnames(clinical)<-clinical[1,]
clinical<-clinical[-1,]
# first I remove genes whose expression is == 0 in more than 50% of the samples:
rem <- function(x){
  x <- as.matrix(x)
  x <- t(apply(x,1,as.numeric))
  r <- as.numeric(apply(x,1,function(i) sum(i == 0)))
  remove <- which(r > dim(x)[2]*0.5)
  return(remove)
}
remove <- rem(rna)
rna <- rna[-remove,] # 17675 1212

# see the values
table(substr(colnames(rna),14,14)) # 0 1100 1 112

# get the index of the normal/control samples
n_index <- which(substr(colnames(rna),14,14) == '1') #112
t_index <- which(substr(colnames(rna),14,14) == '0') # 1100

# apply voom function from limma package to normalize the data
vm <- function(x){
  cond <- factor(ifelse(seq(1,dim(x)[2],1) %in% t_index, 1,  0))
  d <- model.matrix(~1+cond)
  x <- t(apply(x,1,as.numeric))
  ex <- voom(x,d,plot=F)
  return(ex$E)
}
rna_vm  <- vm(rna)
colnames(rna_vm) <- gsub('\\.','-',substr(colnames(rna),1,12))

# and check how data look, they should look normally-ish distributed
hist(rna_vm)
# we can remove the old "rna" cause we don't need it anymor
rm(rna)

# z = [(value gene X in tumor Y)-(mean gene X in normal)]/(standard deviation X in normal)

# calculate z-scores
scal <- function(x,y){
  mean_n <- rowMeans(y)  # mean of normal
  sd_n <- apply(y,1,sd)  # SD of normal
  # z score as (value - mean normal)/SD normal
  res <- matrix(nrow=nrow(x), ncol=ncol(x))
  colnames(res) <- colnames(x)
  rownames(res) <- rownames(x)
  for(i in 1:dim(x)[1]){
    for(j in 1:dim(x)[2]){
      res[i,j] <- (x[i,j]-mean_n[i])/sd_n[i]
    }
  }
  return(res)
}
z_rna <- scal(rna_vm[,t_index],rna_vm[,n_index])
# set the rownames keeping only gene name
rownames(z_rna) <- sapply(rownames(z_rna), function(x) unlist(strsplit(x,'\\|'))[[1]])

rm(rna_vm) #we don't need it anymore


# get the columns that contain data we can use: days to death, new tumor event, last day contact to....
# this is a bit tedious, since there are numerous follow ups, let's collapse them together and keep the first value (the higher one) if more than one is available
ind_keep <- grep('days_to_new_tumor_event_after_initial_treatment',colnames(clinical))
new_tum <- as.matrix(clinical[,ind_keep])
new_tum_collapsed <- c()
for (i in 1:dim(new_tum)[1]){
  if ( sum ( is.na(new_tum[i,])) < dim(new_tum)[2]){
    m <- min(new_tum[i,],na.rm=T)
    new_tum_collapsed <- c(new_tum_collapsed,m)
  } else {
    new_tum_collapsed <- c(new_tum_collapsed,'NA')
  }
}

# do the same to death
ind_keep <- grep('days_to_death',colnames(clinical))
death <- as.matrix(clinical[,ind_keep])
death_collapsed <- c()
for (i in 1:dim(death)[1]){
  if ( sum ( is.na(death[i,])) < dim(death)[2]){
    m <- max(death[i,],na.rm=T)
    death_collapsed <- c(death_collapsed,m)
  } else {
    death_collapsed <- c(death_collapsed,'NA')
  }
}

# and days last follow up here we take the most recent which is the max number
ind_keep <- grep('days_to_last_followup',colnames(clinical))
fl <- as.matrix(clinical[,ind_keep])
fl_collapsed <- c()
for (i in 1:dim(fl)[1]){
  if (sum(is.na(fl[i,])) < dim(fl)[2]){
    m <- max(fl[i,],na.rm=T)
    fl_collapsed <- c(fl_collapsed,m)
  } else {
    fl_collapsed <- c(fl_collapsed,'NA')
  }
}

# and put everything together
all_clin <- data.frame(new_tum_collapsed,death_collapsed,fl_collapsed)
colnames(all_clin) <- c('new_tumor_days', 'death_days', 'followUp_days')


# create vector with time to new tumor containing data to censor for new_tumor
all_clin$new_time <- c()
for (i in 1:length(as.numeric(as.character(all_clin$new_tumor_days)))){
  all_clin$new_time[i] <- ifelse ( is.na(as.numeric(as.character(all_clin$new_tumor_days))[i]),
                                   as.numeric(as.character(all_clin$followUp_days))[i],as.numeric(as.character(all_clin$new_tumor_days))[i])
}

# create vector time to death containing values to censor for death
all_clin$new_death <- c()
for (i in 1:length(as.numeric(as.character(all_clin$death_days)))){
  all_clin$new_death[i] <- ifelse ( is.na(as.numeric(as.character(all_clin$death_days))[i]),
                                    as.numeric(as.character(all_clin$followUp_days))[i],as.numeric(as.character(all_clin$death_days))[i])
}


# create vector for death censoring
clinical<-data.frame(clinical)
table(clinical$patient.vital_status)  # alive 993 dead 104

all_clin$death_event <- ifelse(clinical$patient.vital_status == 'alive', 0,1)

#finally add row.names to clinical
C<- clinical$patient.bcr_patient_barcode
C<-toupper(C) 
C<-data.frame(C)
head(C)
rownames(all_clin) <- C$C
write.csv(all_clin,"all_clin_OS.csv",quote = FALSE) # 1215
all_clin <- read.table("all_clin_OS.csv", sep=",", header=TRUE, row.names = 1)

z_rna<-z_rna_old
z_rna3 <- z_rna[,!duplicated(colnames(z_rna))]  #1091

x<-colnames(z_rna)
colnames(z_rna) <- paste0(substr(x,start = 1,stop=4),"-",substr(x,start = 6,stop=7),"-",substr(x,start = 9,stop=12)) #1087

inter<- intersect(colnames(z_rna3),rownames(all_clin)) %>% data.frame() #112
z_rna4 <- z_rna3[ ,colnames(z_rna3)%in% inter[,1]] 
all_clin4 <- all_clin[rownames(all_clin) %in% inter[,1],] 
all(colnames(z_rna4)==rownames(all_clin4))
z_rna4<-z_rna4[ ,rownames(all_clin4)]


z_rna<- z_rna4
all_clin<-all_clin4
all(colnames(z_rna)==rownames(all_clin))
# create event vector for RNASeq data
event_rna <- t(apply(z_rna, 1, function(x) ifelse(abs(x) > 1.96,1,0)))

# since we need the same number of patients in both clinical and RNASeq data take the indices for the matching samples
ind_tum <- which(unique(colnames(z_rna)) %in% rownames(all_clin))
ind_clin <- which(rownames(all_clin) %in% colnames(z_rna))

# pick your gene of interest
ind_gene <- which(rownames(z_rna) == 'CD9')
ind_gene <- which(rownames(z_rna) == 'CD63')
ind_gene <- which(rownames(z_rna) == 'CD81')
ind_gene <- which(rownames(z_rna) == 'TSG101')
ind_gene <- which(rownames(z_rna) == 'PDCD6IP')
# check how many altered samples we have
table(event_rna[ind_gene,])
#0    1 
#1017   83 

# run survival analysis
s <- survfit(Surv(as.numeric(as.character(all_clin$new_death))[ind_clin],all_clin$death_event[ind_clin])~event_rna[ind_gene,ind_tum])
s1 <- tryCatch(survdiff(Surv(as.numeric(as.character(all_clin$new_death))[ind_clin],all_clin$death_event[ind_clin])~event_rna[ind_gene,ind_tum]), error = function(e) return(NA))

# extraect the p.value
pv <- ifelse ( is.na(s1),next,(round(1 - pchisq(s1$chisq, length(s1$n) - 1),3)))[[1]]

# plot the data
p<-plot(survfit(Surv(as.numeric(as.character(all_clin$new_death))[ind_clin],all_clin$death_event[ind_clin])~event_rna[ind_gene,ind_tum]),
     col=c(1:3), frame=F, lwd=2,main=paste('BRCA_overall survival',rownames(z_rna)[ind_gene],sep='\n'))

# add lines for the median survival
x1 <- ifelse ( is.na(as.numeric(summary(s)$table[,'median'][1])),'NA',as.numeric(summary(s)$table[,'median'][1]))
x2 <- as.numeric(summary(s)$table[,'median'][2])
x2 <- NA


# add legend
legend(3000,0.995,legend=paste('p.value = ',pv[[1]],sep=''),bty='n',cex=1.4)
legend(max(as.numeric(as.character(all_clin$death_days)[ind_clin]),na.rm = T)*0.5,0.55,
       legend=c(paste('NotAltered=',x1),paste('Altered=',x2)),bty='n',cex=1.3,lwd=3,col=c('black','red'))


############################################################EV
############################################################EV
EV<- read.table("exosomescore_TP_5.csv", sep=",",header = T, fill= TRUE)
all_clin<-read.table("all_clin_OS.csv", sep=",",header = T, row.names = 1)
EV<-t(EV)
EV<-data.frame(EV)
colnames(EV)<-EV[1,]
EV<-EV[-c(1),]

EV <- read.table("EV_quantile.csv", sep=",",header = T, row.names = 1)
x<-colnames(EV)
colnames(EV) <- paste0(substr(x,start = 1,stop=4),"-",substr(x,start = 6,stop=7),"-",substr(x,start = 9,stop=12)) #1087
write.csv(EV,"EV_quantile.csv")

ind_gene <- which(rownames(EV) == "exosomescore")
# since we need the same number of patients in both clinical and RNASeq data take the indices for the matching samples
head(colnames(EV))

inter<- intersect(colnames(EV),rownames(all_clin)) %>% data.frame() #112
EV4 <- EV[ ,colnames(EV)%in% inter[,1]] 
all_clin4 <- all_clin[rownames(all_clin) %in% inter[,1],] 
EV4<-EV4[ ,rownames(all_clin4)]
all(colnames(EV4)==rownames(all_clin4))

EV<- EV4
all_clin<-all_clin4
all(colnames(EV)==rownames(all_clin))

ind_tum <- which(unique(colnames(EV)) %in% rownames(all_clin))
ind_clin <- which(rownames(all_clin) %in% colnames(EV))

# run survival analysis
median(as.numeric(EV[1,]))
event_EV<-t(apply(EV, 1, function(x) ifelse(as.numeric(x) > 0.192376,1,0)))
event_EV<-t(apply(EV, 1, function(x) ifelse(as.numeric(x) > 0.6395160,1,0))) 
colnames(event_EV)<-colnames(EV)
table(event_EV)

s <- survfit(Surv(as.numeric(as.character(all_clin$new_death))[ind_clin],all_clin$death_event[ind_clin])~event_EV[ind_gene,ind_tum])
s1 <- tryCatch(survdiff(Surv(as.numeric(as.character(all_clin$new_death))[ind_clin],all_clin$death_event[ind_clin])~event_EV[ind_gene,ind_tum]), error = function(e) return(NA))

# extraect the p.value
pv <- ifelse ( is.na(s1),next,(round(1 - pchisq(s1$chisq, length(s1$n) - 1),3)))[[1]]

# plot the data
p<-plot(survfit(Surv(as.numeric(as.character(all_clin$new_death))[ind_clin],all_clin$death_event[ind_clin])~event_EV[ind_gene,ind_tum]),
        col=c(1:3), frame=F, lwd=2,main=paste('BRCA_overall survival',"group by median",sep='\n'))
# add legend
legend(3000,0.99,legend=paste('p.value = ',pv[[1]],sep=''),bty='n',cex=1.4)
legend(max(as.numeric(as.character(all_clin$death_days)[ind_clin]),na.rm = T)*0.5,0.5,
       legend=c("low n=519","high n=520"),bty='n',cex=1.3,lwd=3,col=c('black','red'))

# plot the data
p<-plot(survfit(Surv(as.numeric(as.character(all_clin$new_death))[ind_clin],all_clin$death_event[ind_clin])~event_EV[ind_gene,ind_tum]),
        col=c(1:3), frame=F, lwd=2,main=paste('BRCA_overall survival',"group by quatile",sep='\n'))
# add legend
legend(3000,0.99,legend=paste('p.value = ',pv[[1]],sep=''),bty='n',cex=1.4)
legend(max(as.numeric(as.character(all_clin$death_days)[ind_clin]),na.rm = T)*0.5,0.5,
       legend=c("low n=260","high n=260"),bty='n',cex=1.3,lwd=3,col=c('black','red'))
